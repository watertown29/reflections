What happens when you initialize a repository? Why do you need to do it?

	a .git file is created to store a repository's meta data

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	It shows you what changes have yet to be saved and which files have had
	additions

How can you use the staging area to make sure you have one commit per logical
change?

	Yes, it can show you how many files are being changed.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When two people are working on a project

How do the diagrams help you visualize the branch structure?

	They display it!

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Adding the code together. 

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	There can be a lot of changes

How is the staging area different from the working directory and the repository? What value do you think it offers?

	It is an in-between step to select what you would want
	to commit.

How can you use the staging area to make sure you have one commit per logical change?

	You can use git diff --staged to compare the changes you
	are about to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If you want to create an experimental feature or try a
	new language in the layout. Branches can be merged later.

How do the diagrams help you visualize the branch structure?

	You can see what branch you are on, how to reach other branches, and check to see that you are not making an
	unreachable branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The code is added together. Because the branches are
	coming together.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	The pro is that automatic merging is faster. But the con
	is that you can ruin your code if the wrong stuff is
	merged. Two developers could make changes that break the
	program.